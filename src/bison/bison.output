Terminals unused in grammar

    tstTRUE
    tstFALSE
    tstCONST_FLOAT
    tstCONST_STRING
    tstDEF_STRING
    "["
    "]"
    tstMUL
    tstDIV
    tstLESS
    tstMORE
    tstLESS_EQUAL
    tstMORE_EQUAL
    tstAND
    tstOR
    tstNOT


Grammar

    0 $accept: line $end

    1 line: statement line
    2     | statement

    3 variable: tstDEF_BOOL tstIDENTIFIER
    4         | tstDEF_BOOL tstIDENTIFIER expression
    5         | tstDEF_INT tstIDENTIFIER
    6         | tstDEF_INT tstIDENTIFIER "=" expression
    7         | tstDEF_FLOAT tstIDENTIFIER
    8         | tstIDENTIFIER "=" expression

    9 statement: preprocessor
   10          | flow
   11          | variable ";"
   12          | enterScope "{" line "}" exitScope
   13          | expression ";"
   14          | tstEND ";"
   15          | ";"

   16 flow: if
   17     | while
   18     | for

   19 if: tstIF "(" expression ")" statement

   20 while: tstWHILE "(" expression ")" statement

   21 for: tstFOR "(" expression ")" statement

   22 preprocessor: tstGLOBAL_REF tstDEF_INT tstIDENTIFIER
   23             | tstGLOBAL_REF tstDEF_BOOL tstIDENTIFIER
   24             | tstGLOBAL_REF tstDEF_FLOAT tstIDENTIFIER
   25             | tstGLOBAL_IN tstDEF_INT tstIDENTIFIER
   26             | tstGLOBAL_IN tstDEF_BOOL tstIDENTIFIER
   27             | tstGLOBAL_IN tstDEF_FLOAT tstIDENTIFIER

   28 expStart: value enterScope

   29 expression: expStart "+" expression exitScope
   30           | expStart "-" expression exitScope
   31           | value

   32 value: tstIDENTIFIER
   33      | tstCONST_INT

   34 enterScope: %empty

   35 exitScope: %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tstEND (258) 14
    tstTRUE (259)
    tstFALSE (260)
    tstCONST_INT <std::string> (261) 33
    tstCONST_FLOAT <std::string> (262)
    tstCONST_STRING <std::string> (263)
    tstDEF_BOOL (264) 3 4 23 26
    tstDEF_INT (265) 5 6 22 25
    tstDEF_FLOAT (266) 7 24 27
    tstDEF_STRING (267)
    "[" (268)
    "]" (269)
    "{" (270) 12
    "}" (271) 12
    "(" (272) 19 20 21
    ")" (273) 19 20 21
    tstIDENTIFIER <std::string> (274) 3 4 5 6 7 8 22 23 24 25 26 27 32
    tstIF (275) 19
    tstWHILE (276) 20
    tstFOR (277) 21
    "+" (278) 29
    "-" (279) 30
    tstMUL (280)
    tstDIV (281)
    tstLESS (282)
    tstMORE (283)
    "=" (284) 6 8
    tstLESS_EQUAL (285)
    tstMORE_EQUAL (286)
    tstAND (287)
    tstOR (288)
    tstNOT (289)
    ";" (290) 11 13 14 15
    tstGLOBAL_REF (291) 22 23 24
    tstGLOBAL_IN (292) 25 26 27


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    line (39)
        on left: 1 2
        on right: 0 1 12
    variable (40)
        on left: 3 4 5 6 7 8
        on right: 11
    statement (41)
        on left: 9 10 11 12 13 14 15
        on right: 1 2 19 20 21
    flow (42)
        on left: 16 17 18
        on right: 10
    if (43)
        on left: 19
        on right: 16
    while (44)
        on left: 20
        on right: 17
    for (45)
        on left: 21
        on right: 18
    preprocessor (46)
        on left: 22 23 24 25 26 27
        on right: 9
    expStart <size_t> (47)
        on left: 28
        on right: 29 30
    expression <size_t> (48)
        on left: 29 30 31
        on right: 4 6 8 13 19 20 21 29 30
    value <size_t> (49)
        on left: 32 33
        on right: 28 31
    enterScope (50)
        on left: 34
        on right: 12 28
    exitScope (51)
        on left: 35
        on right: 12 29 30


State 0

    0 $accept: . line $end

    tstEND         shift, and go to state 1
    tstCONST_INT   shift, and go to state 2
    tstDEF_BOOL    shift, and go to state 3
    tstDEF_INT     shift, and go to state 4
    tstDEF_FLOAT   shift, and go to state 5
    tstIDENTIFIER  shift, and go to state 6
    tstIF          shift, and go to state 7
    tstWHILE       shift, and go to state 8
    tstFOR         shift, and go to state 9
    ";"            shift, and go to state 10
    tstGLOBAL_REF  shift, and go to state 11
    tstGLOBAL_IN   shift, and go to state 12

    $default  reduce using rule 34 (enterScope)

    line          go to state 13
    variable      go to state 14
    statement     go to state 15
    flow          go to state 16
    if            go to state 17
    while         go to state 18
    for           go to state 19
    preprocessor  go to state 20
    expStart      go to state 21
    expression    go to state 22
    value         go to state 23
    enterScope    go to state 24


State 1

   14 statement: tstEND . ";"

    ";"  shift, and go to state 25


State 2

   33 value: tstCONST_INT .

    $default  reduce using rule 33 (value)


State 3

    3 variable: tstDEF_BOOL . tstIDENTIFIER
    4         | tstDEF_BOOL . tstIDENTIFIER expression

    tstIDENTIFIER  shift, and go to state 26


State 4

    5 variable: tstDEF_INT . tstIDENTIFIER
    6         | tstDEF_INT . tstIDENTIFIER "=" expression

    tstIDENTIFIER  shift, and go to state 27


State 5

    7 variable: tstDEF_FLOAT . tstIDENTIFIER

    tstIDENTIFIER  shift, and go to state 28


State 6

    8 variable: tstIDENTIFIER . "=" expression
   32 value: tstIDENTIFIER .

    "="  shift, and go to state 29

    $default  reduce using rule 32 (value)


State 7

   19 if: tstIF . "(" expression ")" statement

    "("  shift, and go to state 30


State 8

   20 while: tstWHILE . "(" expression ")" statement

    "("  shift, and go to state 31


State 9

   21 for: tstFOR . "(" expression ")" statement

    "("  shift, and go to state 32


State 10

   15 statement: ";" .

    $default  reduce using rule 15 (statement)


State 11

   22 preprocessor: tstGLOBAL_REF . tstDEF_INT tstIDENTIFIER
   23             | tstGLOBAL_REF . tstDEF_BOOL tstIDENTIFIER
   24             | tstGLOBAL_REF . tstDEF_FLOAT tstIDENTIFIER

    tstDEF_BOOL   shift, and go to state 33
    tstDEF_INT    shift, and go to state 34
    tstDEF_FLOAT  shift, and go to state 35


State 12

   25 preprocessor: tstGLOBAL_IN . tstDEF_INT tstIDENTIFIER
   26             | tstGLOBAL_IN . tstDEF_BOOL tstIDENTIFIER
   27             | tstGLOBAL_IN . tstDEF_FLOAT tstIDENTIFIER

    tstDEF_BOOL   shift, and go to state 36
    tstDEF_INT    shift, and go to state 37
    tstDEF_FLOAT  shift, and go to state 38


State 13

    0 $accept: line . $end

    $end  shift, and go to state 39


State 14

   11 statement: variable . ";"

    ";"  shift, and go to state 40


State 15

    1 line: statement . line
    2     | statement .

    tstEND         shift, and go to state 1
    tstCONST_INT   shift, and go to state 2
    tstDEF_BOOL    shift, and go to state 3
    tstDEF_INT     shift, and go to state 4
    tstDEF_FLOAT   shift, and go to state 5
    tstIDENTIFIER  shift, and go to state 6
    tstIF          shift, and go to state 7
    tstWHILE       shift, and go to state 8
    tstFOR         shift, and go to state 9
    ";"            shift, and go to state 10
    tstGLOBAL_REF  shift, and go to state 11
    tstGLOBAL_IN   shift, and go to state 12

    "{"       reduce using rule 34 (enterScope)
    $default  reduce using rule 2 (line)

    line          go to state 41
    variable      go to state 14
    statement     go to state 15
    flow          go to state 16
    if            go to state 17
    while         go to state 18
    for           go to state 19
    preprocessor  go to state 20
    expStart      go to state 21
    expression    go to state 22
    value         go to state 23
    enterScope    go to state 24


State 16

   10 statement: flow .

    $default  reduce using rule 10 (statement)


State 17

   16 flow: if .

    $default  reduce using rule 16 (flow)


State 18

   17 flow: while .

    $default  reduce using rule 17 (flow)


State 19

   18 flow: for .

    $default  reduce using rule 18 (flow)


State 20

    9 statement: preprocessor .

    $default  reduce using rule 9 (statement)


State 21

   29 expression: expStart . "+" expression exitScope
   30           | expStart . "-" expression exitScope

    "+"  shift, and go to state 42
    "-"  shift, and go to state 43


State 22

   13 statement: expression . ";"

    ";"  shift, and go to state 44


State 23

   28 expStart: value . enterScope
   31 expression: value .

    "+"       reduce using rule 34 (enterScope)
    "-"       reduce using rule 34 (enterScope)
    $default  reduce using rule 31 (expression)

    enterScope  go to state 45


State 24

   12 statement: enterScope . "{" line "}" exitScope

    "{"  shift, and go to state 46


State 25

   14 statement: tstEND ";" .

    $default  reduce using rule 14 (statement)


State 26

    3 variable: tstDEF_BOOL tstIDENTIFIER .
    4         | tstDEF_BOOL tstIDENTIFIER . expression

    tstCONST_INT   shift, and go to state 2
    tstIDENTIFIER  shift, and go to state 47

    $default  reduce using rule 3 (variable)

    expStart    go to state 21
    expression  go to state 48
    value       go to state 23


State 27

    5 variable: tstDEF_INT tstIDENTIFIER .
    6         | tstDEF_INT tstIDENTIFIER . "=" expression

    "="  shift, and go to state 49

    $default  reduce using rule 5 (variable)


State 28

    7 variable: tstDEF_FLOAT tstIDENTIFIER .

    $default  reduce using rule 7 (variable)


State 29

    8 variable: tstIDENTIFIER "=" . expression

    tstCONST_INT   shift, and go to state 2
    tstIDENTIFIER  shift, and go to state 47

    expStart    go to state 21
    expression  go to state 50
    value       go to state 23


State 30

   19 if: tstIF "(" . expression ")" statement

    tstCONST_INT   shift, and go to state 2
    tstIDENTIFIER  shift, and go to state 47

    expStart    go to state 21
    expression  go to state 51
    value       go to state 23


State 31

   20 while: tstWHILE "(" . expression ")" statement

    tstCONST_INT   shift, and go to state 2
    tstIDENTIFIER  shift, and go to state 47

    expStart    go to state 21
    expression  go to state 52
    value       go to state 23


State 32

   21 for: tstFOR "(" . expression ")" statement

    tstCONST_INT   shift, and go to state 2
    tstIDENTIFIER  shift, and go to state 47

    expStart    go to state 21
    expression  go to state 53
    value       go to state 23


State 33

   23 preprocessor: tstGLOBAL_REF tstDEF_BOOL . tstIDENTIFIER

    tstIDENTIFIER  shift, and go to state 54


State 34

   22 preprocessor: tstGLOBAL_REF tstDEF_INT . tstIDENTIFIER

    tstIDENTIFIER  shift, and go to state 55


State 35

   24 preprocessor: tstGLOBAL_REF tstDEF_FLOAT . tstIDENTIFIER

    tstIDENTIFIER  shift, and go to state 56


State 36

   26 preprocessor: tstGLOBAL_IN tstDEF_BOOL . tstIDENTIFIER

    tstIDENTIFIER  shift, and go to state 57


State 37

   25 preprocessor: tstGLOBAL_IN tstDEF_INT . tstIDENTIFIER

    tstIDENTIFIER  shift, and go to state 58


State 38

   27 preprocessor: tstGLOBAL_IN tstDEF_FLOAT . tstIDENTIFIER

    tstIDENTIFIER  shift, and go to state 59


State 39

    0 $accept: line $end .

    $default  accept


State 40

   11 statement: variable ";" .

    $default  reduce using rule 11 (statement)


State 41

    1 line: statement line .

    $default  reduce using rule 1 (line)


State 42

   29 expression: expStart "+" . expression exitScope

    tstCONST_INT   shift, and go to state 2
    tstIDENTIFIER  shift, and go to state 47

    expStart    go to state 21
    expression  go to state 60
    value       go to state 23


State 43

   30 expression: expStart "-" . expression exitScope

    tstCONST_INT   shift, and go to state 2
    tstIDENTIFIER  shift, and go to state 47

    expStart    go to state 21
    expression  go to state 61
    value       go to state 23


State 44

   13 statement: expression ";" .

    $default  reduce using rule 13 (statement)


State 45

   28 expStart: value enterScope .

    $default  reduce using rule 28 (expStart)


State 46

   12 statement: enterScope "{" . line "}" exitScope

    tstEND         shift, and go to state 1
    tstCONST_INT   shift, and go to state 2
    tstDEF_BOOL    shift, and go to state 3
    tstDEF_INT     shift, and go to state 4
    tstDEF_FLOAT   shift, and go to state 5
    tstIDENTIFIER  shift, and go to state 6
    tstIF          shift, and go to state 7
    tstWHILE       shift, and go to state 8
    tstFOR         shift, and go to state 9
    ";"            shift, and go to state 10
    tstGLOBAL_REF  shift, and go to state 11
    tstGLOBAL_IN   shift, and go to state 12

    $default  reduce using rule 34 (enterScope)

    line          go to state 62
    variable      go to state 14
    statement     go to state 15
    flow          go to state 16
    if            go to state 17
    while         go to state 18
    for           go to state 19
    preprocessor  go to state 20
    expStart      go to state 21
    expression    go to state 22
    value         go to state 23
    enterScope    go to state 24


State 47

   32 value: tstIDENTIFIER .

    $default  reduce using rule 32 (value)


State 48

    4 variable: tstDEF_BOOL tstIDENTIFIER expression .

    $default  reduce using rule 4 (variable)


State 49

    6 variable: tstDEF_INT tstIDENTIFIER "=" . expression

    tstCONST_INT   shift, and go to state 2
    tstIDENTIFIER  shift, and go to state 47

    expStart    go to state 21
    expression  go to state 63
    value       go to state 23


State 50

    8 variable: tstIDENTIFIER "=" expression .

    $default  reduce using rule 8 (variable)


State 51

   19 if: tstIF "(" expression . ")" statement

    ")"  shift, and go to state 64


State 52

   20 while: tstWHILE "(" expression . ")" statement

    ")"  shift, and go to state 65


State 53

   21 for: tstFOR "(" expression . ")" statement

    ")"  shift, and go to state 66


State 54

   23 preprocessor: tstGLOBAL_REF tstDEF_BOOL tstIDENTIFIER .

    $default  reduce using rule 23 (preprocessor)


State 55

   22 preprocessor: tstGLOBAL_REF tstDEF_INT tstIDENTIFIER .

    $default  reduce using rule 22 (preprocessor)


State 56

   24 preprocessor: tstGLOBAL_REF tstDEF_FLOAT tstIDENTIFIER .

    $default  reduce using rule 24 (preprocessor)


State 57

   26 preprocessor: tstGLOBAL_IN tstDEF_BOOL tstIDENTIFIER .

    $default  reduce using rule 26 (preprocessor)


State 58

   25 preprocessor: tstGLOBAL_IN tstDEF_INT tstIDENTIFIER .

    $default  reduce using rule 25 (preprocessor)


State 59

   27 preprocessor: tstGLOBAL_IN tstDEF_FLOAT tstIDENTIFIER .

    $default  reduce using rule 27 (preprocessor)


State 60

   29 expression: expStart "+" expression . exitScope

    $default  reduce using rule 35 (exitScope)

    exitScope  go to state 67


State 61

   30 expression: expStart "-" expression . exitScope

    $default  reduce using rule 35 (exitScope)

    exitScope  go to state 68


State 62

   12 statement: enterScope "{" line . "}" exitScope

    "}"  shift, and go to state 69


State 63

    6 variable: tstDEF_INT tstIDENTIFIER "=" expression .

    $default  reduce using rule 6 (variable)


State 64

   19 if: tstIF "(" expression ")" . statement

    tstEND         shift, and go to state 1
    tstCONST_INT   shift, and go to state 2
    tstDEF_BOOL    shift, and go to state 3
    tstDEF_INT     shift, and go to state 4
    tstDEF_FLOAT   shift, and go to state 5
    tstIDENTIFIER  shift, and go to state 6
    tstIF          shift, and go to state 7
    tstWHILE       shift, and go to state 8
    tstFOR         shift, and go to state 9
    ";"            shift, and go to state 10
    tstGLOBAL_REF  shift, and go to state 11
    tstGLOBAL_IN   shift, and go to state 12

    $default  reduce using rule 34 (enterScope)

    variable      go to state 14
    statement     go to state 70
    flow          go to state 16
    if            go to state 17
    while         go to state 18
    for           go to state 19
    preprocessor  go to state 20
    expStart      go to state 21
    expression    go to state 22
    value         go to state 23
    enterScope    go to state 24


State 65

   20 while: tstWHILE "(" expression ")" . statement

    tstEND         shift, and go to state 1
    tstCONST_INT   shift, and go to state 2
    tstDEF_BOOL    shift, and go to state 3
    tstDEF_INT     shift, and go to state 4
    tstDEF_FLOAT   shift, and go to state 5
    tstIDENTIFIER  shift, and go to state 6
    tstIF          shift, and go to state 7
    tstWHILE       shift, and go to state 8
    tstFOR         shift, and go to state 9
    ";"            shift, and go to state 10
    tstGLOBAL_REF  shift, and go to state 11
    tstGLOBAL_IN   shift, and go to state 12

    $default  reduce using rule 34 (enterScope)

    variable      go to state 14
    statement     go to state 71
    flow          go to state 16
    if            go to state 17
    while         go to state 18
    for           go to state 19
    preprocessor  go to state 20
    expStart      go to state 21
    expression    go to state 22
    value         go to state 23
    enterScope    go to state 24


State 66

   21 for: tstFOR "(" expression ")" . statement

    tstEND         shift, and go to state 1
    tstCONST_INT   shift, and go to state 2
    tstDEF_BOOL    shift, and go to state 3
    tstDEF_INT     shift, and go to state 4
    tstDEF_FLOAT   shift, and go to state 5
    tstIDENTIFIER  shift, and go to state 6
    tstIF          shift, and go to state 7
    tstWHILE       shift, and go to state 8
    tstFOR         shift, and go to state 9
    ";"            shift, and go to state 10
    tstGLOBAL_REF  shift, and go to state 11
    tstGLOBAL_IN   shift, and go to state 12

    $default  reduce using rule 34 (enterScope)

    variable      go to state 14
    statement     go to state 72
    flow          go to state 16
    if            go to state 17
    while         go to state 18
    for           go to state 19
    preprocessor  go to state 20
    expStart      go to state 21
    expression    go to state 22
    value         go to state 23
    enterScope    go to state 24


State 67

   29 expression: expStart "+" expression exitScope .

    $default  reduce using rule 29 (expression)


State 68

   30 expression: expStart "-" expression exitScope .

    $default  reduce using rule 30 (expression)


State 69

   12 statement: enterScope "{" line "}" . exitScope

    $default  reduce using rule 35 (exitScope)

    exitScope  go to state 73


State 70

   19 if: tstIF "(" expression ")" statement .

    $default  reduce using rule 19 (if)


State 71

   20 while: tstWHILE "(" expression ")" statement .

    $default  reduce using rule 20 (while)


State 72

   21 for: tstFOR "(" expression ")" statement .

    $default  reduce using rule 21 (for)


State 73

   12 statement: enterScope "{" line "}" exitScope .

    $default  reduce using rule 12 (statement)
